// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sf/metering/v1/metering.proto (package sf.metering.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sf/metering/v1/metering.proto.
 */
export const file_sf_metering_v1_metering: GenFile = /*@__PURE__*/
  fileDesc("Ch1zZi9tZXRlcmluZy92MS9tZXRlcmluZy5wcm90bxIOc2YubWV0ZXJpbmcudjEiowIKBUV2ZW50Eg8KB3VzZXJfaWQYASABKAkSDwoHYXBpX2tleRgCIAEoCRISCgphcGlfa2V5X2lkGAMgASgJEhUKDWFwaV9rZXlfdXNhZ2UYBCABKAkSEgoKaXBfYWRkcmVzcxgFIAEoCRIPCgduZXR3b3JrGAYgASgJEg8KB3NlcnZpY2UYByABKAkSDgoGbWV0aG9kGAkgASgJEi8KCG1ldGFkYXRhGAogAygLMh0uc2YubWV0ZXJpbmcudjEuTWV0YWRhdGFGaWVsZBInCgdtZXRyaWNzGBQgAygLMhYuc2YubWV0ZXJpbmcudjEuTWV0cmljEi0KCXRpbWVzdGFtcBgeIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiKwoNTWV0YWRhdGFGaWVsZBILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAkiuAEKBk1ldHJpYxInCgNrZXkYASABKA4yGi5zZi5tZXRlcmluZy52MS5NZXRyaWMuS2V5Eg0KBXZhbHVlGAIgASgBInYKA0tleRISCg5SRVFVRVNUU19DT1VOVBAAEhMKD1JFU1BPTlNFU19DT1VOVBABEhEKDUlOR1JFU1NfQllURVMQAhIQCgxFR1JFU1NfQllURVMQAxIOCgpSRUFEX0JZVEVTEAQSEQoNV1JJVFRFTl9CWVRFUxAFQjlaN2dpdGh1Yi5jb20vc3RyZWFtaW5nZmFzdC9wYmdvL3NmL21ldGVyaW5nL3YxO3BibWV0ZXJpbmdiBnByb3RvMw", [file_google_protobuf_timestamp]);

/**
 * @generated from message sf.metering.v1.Event
 */
export type Event = Message<"sf.metering.v1.Event"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string api_key = 2;
   */
  apiKey: string;

  /**
   * @generated from field: string api_key_id = 3;
   */
  apiKeyId: string;

  /**
   * @generated from field: string api_key_usage = 4;
   */
  apiKeyUsage: string;

  /**
   * @generated from field: string ip_address = 5;
   */
  ipAddress: string;

  /**
   * eth-mainnet
   *
   * @generated from field: string network = 6;
   */
  network: string;

  /**
   * firehose , substreams, exmx
   *
   * @generated from field: string service = 7;
   */
  service: string;

  /**
   * grpc_blocks, grpc_run, http_GetState, GetBlockHead
   *
   * @generated from field: string method = 9;
   */
  method: string;

  /**
   * @generated from field: repeated sf.metering.v1.MetadataField metadata = 10;
   */
  metadata: MetadataField[];

  /**
   * @generated from field: repeated sf.metering.v1.Metric metrics = 20;
   */
  metrics: Metric[];

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 30;
   */
  timestamp?: Timestamp;
};

/**
 * Describes the message sf.metering.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema: GenMessage<Event> = /*@__PURE__*/
  messageDesc(file_sf_metering_v1_metering, 0);

/**
 * @generated from message sf.metering.v1.MetadataField
 */
export type MetadataField = Message<"sf.metering.v1.MetadataField"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message sf.metering.v1.MetadataField.
 * Use `create(MetadataFieldSchema)` to create a new message.
 */
export const MetadataFieldSchema: GenMessage<MetadataField> = /*@__PURE__*/
  messageDesc(file_sf_metering_v1_metering, 1);

/**
 * @generated from message sf.metering.v1.Metric
 */
export type Metric = Message<"sf.metering.v1.Metric"> & {
  /**
   * @generated from field: sf.metering.v1.Metric.Key key = 1;
   */
  key: Metric_Key;

  /**
   * @generated from field: double value = 2;
   */
  value: number;
};

/**
 * Describes the message sf.metering.v1.Metric.
 * Use `create(MetricSchema)` to create a new message.
 */
export const MetricSchema: GenMessage<Metric> = /*@__PURE__*/
  messageDesc(file_sf_metering_v1_metering, 2);

/**
 * @generated from enum sf.metering.v1.Metric.Key
 */
export enum Metric_Key {
  /**
   * @generated from enum value: REQUESTS_COUNT = 0;
   */
  REQUESTS_COUNT = 0,

  /**
   * @generated from enum value: RESPONSES_COUNT = 1;
   */
  RESPONSES_COUNT = 1,

  /**
   * @generated from enum value: INGRESS_BYTES = 2;
   */
  INGRESS_BYTES = 2,

  /**
   * @generated from enum value: EGRESS_BYTES = 3;
   */
  EGRESS_BYTES = 3,

  /**
   * @generated from enum value: READ_BYTES = 4;
   */
  READ_BYTES = 4,

  /**
   * @generated from enum value: WRITTEN_BYTES = 5;
   */
  WRITTEN_BYTES = 5,
}

/**
 * Describes the enum sf.metering.v1.Metric.Key.
 */
export const Metric_KeySchema: GenEnum<Metric_Key> = /*@__PURE__*/
  enumDesc(file_sf_metering_v1_metering, 2, 0);

